apiVersion: v1
data:
  postgres-password: bUFJMTIzNDU2  #mAI123456
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: fastgpt
    app.kubernetes.io/name: pgvector
  name: pgvector

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: fastgpt
    app.kubernetes.io/name: pgvector
  name: pgvector-hl
spec:
  ports:
    - name: tcp-pgvector
      port: 5432
      protocol: TCP
      targetPort: tcp-pgvector
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/instance: fastgpt
    app.kubernetes.io/name: pgvector
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: fastgpt
    app.kubernetes.io/name: pgvector
  name: pgvector
spec:
  ports:
    - name: tcp-pgvector
      port: 5432
      protocol: TCP
      targetPort: tcp-pgvector
  selector:
    app.kubernetes.io/instance: fastgpt
    app.kubernetes.io/name: pgvector
  sessionAffinity: None
  type: ClusterIP
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/instance: fastgpt
    app.kubernetes.io/name: pgvector
  name: pgvector
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: fastgpt
      app.kubernetes.io/name: pgvector
  serviceName: pgvector-hl
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: fastgpt
        app.kubernetes.io/name: pgvector
      name: pgvector
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: fastgpt
                    app.kubernetes.io/name: pgvector
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - env:
            - name: BITNAMI_DEBUG
              value: 'false'
            - name: POSTGRESQL_PORT_NUMBER
              value: '5432'
            - name: POSTGRESQL_VOLUME_DIR
              value: /bitnami/postgresql
            - name: PGDATA
              value: /bitnami/postgresql/data
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: postgres-password
                  name: pgvector
            - name: POSTGRES_DB
              value: postgres
            - name: POSTGRESQL_ENABLE_LDAP
              value: 'no'
            - name: POSTGRESQL_ENABLE_TLS
              value: 'no'
            - name: POSTGRESQL_LOG_HOSTNAME
              value: 'false'
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: 'false'
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: 'false'
            - name: POSTGRESQL_pgvectorAUDIT_LOG_CATALOG
              value: 'off'
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: error
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: pgaudit
          image: registry.cn-shanghai.aliyuncs.com/c-things/pgvector:v0.7.3
          imagePullPolicy: IfNotPresent
          name: pgvector
          ports:
            - containerPort: 5432
              name: tcp-pgvector
              protocol: TCP
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /dev/shm
              name: dshm
            - mountPath: /bitnami/postgresql
              name: data-pg
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1001
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir:
            medium: Memory
          name: dshm
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: data-pg
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 80Gi
        storageClassName: ceph-block
        volumeMode: Filesystem
